{
  "openapi" : "3.0.3",
  "info" : {
    "title" : "selc-dashboard",
    "description" : "Self Care Dashboard API documentation",
    "version" : "0.0.1-SNAPSHOT"
  },
  "servers" : [ {
    "url" : "{url}:{port}{basePath}",
    "variables" : {
      "url" : {
        "default" : "http://localhost"
      },
      "port" : {
        "default" : "80"
      },
      "basePath" : {
        "default" : ""
      }
    }
  } ],
  "tags" : [ {
    "name" : "delegations",
    "description" : "Delegation Controller"
  }, {
    "name" : "institutions",
    "description" : "Institution operations"
  }, {
    "name" : "onboarding",
    "description" : "Onboarding operations"
  }, {
    "name" : "pnPGInstitutions",
    "description" : "PN PG Institution operations"
  }, {
    "name" : "products",
    "description" : "Products operations"
  }, {
    "name" : "relationships",
    "description" : "Relationships operations"
  }, {
    "name" : "support",
    "description" : "Support Controller"
  }, {
    "name" : "token",
    "description" : "Token operations"
  }, {
    "name" : "user",
    "description" : "User V 2 Controller"
  }, {
    "name" : "user-groups",
    "description" : "UserGroups operations"
  } ],
  "paths" : {
    "/v1/delegations" : {
      "post" : {
        "tags" : [ "delegations" ],
        "summary" : "createDelegation",
        "description" : "Service to create association between institution and technical partner",
        "operationId" : "createDelegationUsingPOST",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DelegationRequestDto"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DelegationIdResource"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "409" : {
            "description" : "Conflict"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ "global" ]
        } ]
      }
    },
    "/v1/institutions/products" : {
      "get" : {
        "tags" : [ "institutions" ],
        "summary" : "getProductsTree",
        "description" : "Service to get all the products related to a specific institution",
        "operationId" : "getProductsTreeUsingGET",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ProductsResource"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ "global" ]
        } ]
      }
    },
    "/v1/institutions/{institutionId}" : {
      "get" : {
        "tags" : [ "institutions" ],
        "summary" : "getInstitution",
        "description" : "Service to get a specific institution related to logged user",
        "operationId" : "getInstitutionUsingGET",
        "parameters" : [ {
          "name" : "institutionId",
          "in" : "path",
          "description" : "Institution's unique internal identifier",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InstitutionResource"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ "global" ]
        } ]
      },
      "put" : {
        "tags" : [ "institutions" ],
        "summary" : "updateInstitutionDescription",
        "description" : "Update institution description",
        "operationId" : "updateInstitutionDescriptionUsingPUT",
        "parameters" : [ {
          "name" : "institutionId",
          "in" : "path",
          "description" : "Institution's unique internal identifier",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateInstitutionDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Institution"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ "global" ]
        } ]
      }
    },
    "/v1/institutions/{institutionId}/geographicTaxonomy" : {
      "get" : {
        "tags" : [ "institutions" ],
        "summary" : "getInstitutionGeographicTaxonomy",
        "description" : "The service retrieve the institution's geographic taxonomy",
        "operationId" : "getInstitutionGeographicTaxonomyUsingGET",
        "parameters" : [ {
          "name" : "institutionId",
          "in" : "path",
          "description" : "Institution's unique internal identifier",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/GeographicTaxonomyResource"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ "global" ]
        } ]
      },
      "put" : {
        "tags" : [ "institutions" ],
        "summary" : "updateInstitutionGeographicTaxonomy",
        "description" : "Service to update the geographic taxonomy of an onboarded institution",
        "operationId" : "updateInstitutionGeographicTaxonomyUsingPUT",
        "parameters" : [ {
          "name" : "institutionId",
          "in" : "path",
          "description" : "Institution's unique internal identifier",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GeographicTaxonomyListDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ "global" ]
        } ]
      }
    },
    "/v1/institutions/{institutionId}/institutions" : {
      "get" : {
        "tags" : [ "institutions" ],
        "summary" : "Retrieve list of delegation using to",
        "description" : "Retrieve list of delegation using to",
        "operationId" : "getDelegationsUsingToUsingGET",
        "parameters" : [ {
          "name" : "institutionId",
          "in" : "path",
          "description" : "Technical partner's identifier",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "productId",
          "in" : "query",
          "description" : "Product's identifier",
          "required" : false,
          "style" : "form",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "search",
          "in" : "query",
          "description" : "Institution's name to search",
          "required" : false,
          "style" : "form",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "taxCode",
          "in" : "query",
          "description" : "Institution's tax code",
          "required" : false,
          "style" : "form",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "mode",
          "in" : "query",
          "description" : "Mode (full or normal) to retrieve institution's delegations",
          "required" : false,
          "style" : "form",
          "schema" : {
            "type" : "string",
            "enum" : [ "FULL", "NORMAL" ]
          }
        }, {
          "name" : "order",
          "in" : "query",
          "description" : "Order to show response NONE, ASC, DESC",
          "required" : false,
          "style" : "form",
          "schema" : {
            "type" : "string",
            "enum" : [ "ASC", "DESC", "NONE" ]
          }
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "page",
          "required" : false,
          "style" : "form",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "size",
          "in" : "query",
          "description" : "size",
          "required" : false,
          "style" : "form",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/DelegationResource"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ "global" ]
        } ]
      }
    },
    "/v1/institutions/{institutionId}/logo" : {
      "put" : {
        "tags" : [ "institutions" ],
        "summary" : "saveInstitutionLogo",
        "description" : "Service to upload and store the institution's logo",
        "operationId" : "saveInstitutionLogoUsingPUT",
        "parameters" : [ {
          "name" : "institutionId",
          "in" : "path",
          "description" : "Institution's unique internal identifier",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "required" : [ "logo" ],
                "type" : "object",
                "properties" : {
                  "logo" : {
                    "type" : "string",
                    "description" : "Institution's logo",
                    "format" : "binary"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              },
              "multipart/form-data" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ "global" ]
        } ]
      }
    },
    "/v1/institutions/{institutionId}/partners" : {
      "get" : {
        "tags" : [ "institutions" ],
        "summary" : "Retrieve institution's delegations",
        "description" : "Retrieve institution's delegations",
        "operationId" : "getDelegationsUsingFromUsingGET",
        "parameters" : [ {
          "name" : "institutionId",
          "in" : "path",
          "description" : "Institution's identifier",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "productId",
          "in" : "query",
          "description" : "Product's identifier",
          "required" : false,
          "style" : "form",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/DelegationResource"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ "global" ]
        } ]
      }
    },
    "/v2/institutions" : {
      "get" : {
        "tags" : [ "institutions" ],
        "summary" : "getInstitutions",
        "description" : "Service to get all the institutions related to logged user",
        "operationId" : "v2RetrieveUserInstitutions",
        "parameters" : [ {
          "name" : "authenticated",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "authorities[0].authority",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "credentials",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "schema" : {
            "type" : "object"
          }
        }, {
          "name" : "details",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "schema" : {
            "type" : "object"
          }
        }, {
          "name" : "principal",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "schema" : {
            "type" : "object"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/InstitutionBaseResource"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ "global" ]
        } ]
      }
    },
    "/v2/institutions/{institutionId}" : {
      "get" : {
        "tags" : [ "institutions" ],
        "summary" : "Service to get a specific institution related to logged user",
        "description" : "Service to get a specific institution related to logged user",
        "operationId" : "v2GetInstitution",
        "parameters" : [ {
          "name" : "institutionId",
          "in" : "path",
          "description" : "Institution's unique internal identifier",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InstitutionResource"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ "global" ]
        } ]
      }
    },
    "/v2/institutions/{institutionId}/institutions" : {
      "get" : {
        "tags" : [ "institutions" ],
        "summary" : "Retrieve list of delegation using to",
        "description" : "Retrieve list of delegation using to",
        "operationId" : "getDelegationsUsingToUsingGET_1",
        "parameters" : [ {
          "name" : "institutionId",
          "in" : "path",
          "description" : "Technical partner's identifier",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "productId",
          "in" : "query",
          "description" : "Product's identifier",
          "required" : false,
          "style" : "form",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "search",
          "in" : "query",
          "description" : "Institution's name to search",
          "required" : false,
          "style" : "form",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "taxCode",
          "in" : "query",
          "description" : "Institution's tax code",
          "required" : false,
          "style" : "form",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "mode",
          "in" : "query",
          "description" : "Mode (full or normal) to retrieve institution's delegations",
          "required" : false,
          "style" : "form",
          "schema" : {
            "type" : "string",
            "enum" : [ "FULL", "NORMAL" ]
          }
        }, {
          "name" : "order",
          "in" : "query",
          "description" : "Order to show response NONE, ASC, DESC",
          "required" : false,
          "style" : "form",
          "schema" : {
            "type" : "string",
            "enum" : [ "ASC", "DESC", "NONE" ]
          }
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "page",
          "required" : false,
          "style" : "form",
          "schema" : {
            "minimum" : 0,
            "exclusiveMinimum" : false,
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "size",
          "in" : "query",
          "description" : "size",
          "required" : false,
          "style" : "form",
          "schema" : {
            "minimum" : 1,
            "exclusiveMinimum" : false,
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DelegationWithPagination"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ "global" ]
        } ]
      }
    },
    "/v2/institutions/{institutionId}/products/{productId}/users" : {
      "post" : {
        "tags" : [ "institutions" ],
        "summary" : "createInstitutionProductUser",
        "description" : "Service to Create a user related to a specific pair of institution-product",
        "operationId" : "v2PostCreateInstitutionProductUser",
        "parameters" : [ {
          "name" : "institutionId",
          "in" : "path",
          "description" : "Institution's unique internal identifier",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "productId",
          "in" : "path",
          "description" : "Product's unique identifier",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateUserDto"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserIdResource"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ "global" ]
        } ]
      }
    },
    "/v2/institutions/{institutionId}/products/{productId}/users/{userId}" : {
      "put" : {
        "tags" : [ "institutions" ],
        "summary" : "addUserProductRoles",
        "description" : "Service to add a new role/product to a specific user",
        "operationId" : "v2AddUserProductRole",
        "parameters" : [ {
          "name" : "institutionId",
          "in" : "path",
          "description" : "Institution's unique internal identifier",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "productId",
          "in" : "path",
          "description" : "Product's unique identifier",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "description" : "User's unique identifier",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserProductRoles"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Created"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ "global" ]
        } ]
      }
    },
    "/v2/institutions/{institutionId}/users/{userId}" : {
      "get" : {
        "tags" : [ "institutions" ],
        "summary" : "getInstitutionUser",
        "description" : "Service to get the users with the given user id related to a specific institution",
        "operationId" : "v2RetrieveInstitutionUser",
        "parameters" : [ {
          "name" : "authenticated",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "authorities[0].authority",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "credentials",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "schema" : {
            "type" : "object"
          }
        }, {
          "name" : "details",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "schema" : {
            "type" : "object"
          }
        }, {
          "name" : "institutionId",
          "in" : "path",
          "description" : "Institution's unique internal identifier",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "principal",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "schema" : {
            "type" : "object"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "description" : "User's unique identifier",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InstitutionUserDetailsResource"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ "global" ]
        } ]
      }
    },
    "/v1/products/{productId}/brokers/{institutionType}" : {
      "get" : {
        "tags" : [ "products" ],
        "summary" : "getProductBrokers",
        "description" : "Service to get list of partners",
        "operationId" : "getProductBrokersUsingGET",
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "Product's unique identifier",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "institutionType",
          "in" : "path",
          "description" : "Institution Type",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string",
            "enum" : [ "AS", "CON", "GSP", "PA", "PG", "PSP", "PT", "REC", "SA", "SCP" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/BrokerResource"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ "global" ]
        } ]
      }
    },
    "/v1/products/{productId}/roles" : {
      "get" : {
        "tags" : [ "products" ],
        "summary" : "getProductRoles",
        "description" : "Service to get the Product roles",
        "operationId" : "getProductRolesUsingGET",
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "Product's unique identifier",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ProductRoleMappingsResource"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ "global" ]
        } ]
      }
    },
    "/v2/products/{productId}/back-office" : {
      "get" : {
        "tags" : [ "products" ],
        "summary" : "Service to trigger token exchange and redirect to product's back office URL",
        "description" : "Service to trigger token exchange and redirect to product's back office URL",
        "operationId" : "v2RetrieveProductBackofficeUsingGET",
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "Product's unique identifier",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "institutionId",
          "in" : "query",
          "description" : "Institution's unique internal identifier",
          "required" : true,
          "style" : "form",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "environment",
          "in" : "query",
          "description" : "Back Office environment",
          "required" : false,
          "style" : "form",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "format" : "uri"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ "global" ]
        } ]
      }
    },
    "/v1/support" : {
      "post" : {
        "tags" : [ "external-v2", "support" ],
        "summary" : "sendSupportRequest",
        "description" : "Service to retrieve Support contact's form",
        "operationId" : "sendSupportRequestUsingPOST",
        "parameters" : [ {
          "name" : "authenticated",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "authorities[0].authority",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "credentials",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "schema" : {
            "type" : "object"
          }
        }, {
          "name" : "details",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "schema" : {
            "type" : "object"
          }
        }, {
          "name" : "principal",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "schema" : {
            "type" : "object"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SupportRequestDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupportResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ "global" ]
        } ]
      }
    },
    "/v2/token/exchange" : {
      "get" : {
        "tags" : [ "token" ],
        "summary" : "Service create an 'Identity Token' based on a Self Care session token",
        "description" : "Service create an 'Identity Token' based on a Self Care session token",
        "operationId" : "v2Exchange",
        "parameters" : [ {
          "name" : "institutionId",
          "in" : "query",
          "description" : "Institution's unique internal identifier",
          "required" : true,
          "style" : "form",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "productId",
          "in" : "query",
          "description" : "Product's unique identifier",
          "required" : true,
          "style" : "form",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "environment",
          "in" : "query",
          "description" : "Back Office environment",
          "required" : false,
          "style" : "form",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IdentityTokenResource"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ "global" ]
        } ]
      }
    },
    "/v2/token/exchange/fatturazione" : {
      "get" : {
        "tags" : [ "token" ],
        "summary" : "billingToken",
        "description" : "Service to create a 'Billing Token' based on a Self Care session token",
        "operationId" : "billingTokenUsingGET",
        "parameters" : [ {
          "name" : "authenticated",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "authorities[0].authority",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "credentials",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "details",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "schema" : {
            "type" : "object"
          }
        }, {
          "name" : "institutionId",
          "in" : "query",
          "description" : "Institution's unique internal identifier",
          "required" : true,
          "style" : "form",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "principal",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "schema" : {
            "type" : "object"
          }
        }, {
          "name" : "environment",
          "in" : "query",
          "description" : "Back Office environment",
          "required" : false,
          "style" : "form",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "format" : "uri"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ "global" ]
        } ]
      }
    },
    "/v2/user-groups" : {
      "get" : {
        "tags" : [ "user-groups" ],
        "summary" : "getUserGroups",
        "description" : "Service that allows to get a list of UserGroup entities",
        "operationId" : "getUserGroupsUsingGET",
        "parameters" : [ {
          "name" : "institutionId",
          "in" : "query",
          "description" : "Users group's institutionId",
          "required" : false,
          "style" : "form",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The page number to access (0 indexed, defaults to 0)",
          "required" : false,
          "style" : "form",
          "allowReserved" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "size",
          "in" : "query",
          "description" : "Number of records per page (defaults to 20, max 2000)",
          "required" : false,
          "style" : "form",
          "allowReserved" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
          "required" : false,
          "style" : "form",
          "allowReserved" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "productId",
          "in" : "query",
          "description" : "Users group's productId",
          "required" : false,
          "style" : "form",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userId",
          "in" : "query",
          "description" : "User's unique identifier",
          "required" : false,
          "style" : "form",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageOfUserGroupPlainResource"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ "global" ]
        } ]
      }
    },
    "/v2/user-groups/" : {
      "post" : {
        "tags" : [ "user-groups" ],
        "summary" : "createUserGroup",
        "description" : "Service that allows the insert of a new occurrence for the UserGroup entity",
        "operationId" : "createUserGroupUsingPOST",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateUserGroupDto"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserGroupIdResource"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "409" : {
            "description" : "Conflict"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ "global" ]
        } ]
      }
    },
    "/v2/user-groups/{id}" : {
      "get" : {
        "tags" : [ "user-groups" ],
        "summary" : "getUserGroupById",
        "description" : "Service to get a specific UserGroup entity",
        "operationId" : "getUserGroupByIdUsingGET",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Users group's unique identifier",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "institutionId",
          "in" : "query",
          "description" : "Users group's institutionId",
          "required" : false,
          "style" : "form",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserGroupResource"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ "global" ]
        } ]
      },
      "put" : {
        "tags" : [ "user-groups" ],
        "summary" : "updateUserGroup",
        "description" : "Service that allows the modification of a specific occurrence for the UserGroup entity by an Admin user",
        "operationId" : "updateUserGroupUsingPUT",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Users group's unique identifier",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateUserGroupDto"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "409" : {
            "description" : "Conflict"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ "global" ]
        } ]
      },
      "delete" : {
        "tags" : [ "user-groups" ],
        "summary" : "deleteUserGroup",
        "description" : "Service that allows the deletion of a specific occurrence for the UserGroup entity by an Admin user",
        "operationId" : "deleteUserGroupUsingDELETE",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Users group's unique identifier",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ "global" ]
        } ]
      }
    },
    "/v2/user-groups/{id}/activate" : {
      "post" : {
        "tags" : [ "user-groups" ],
        "summary" : "activateUserGroup",
        "description" : "Service that allows the activation of a specific occurrence for the UserGroup entity by an Admin user",
        "operationId" : "activateUserGroupUsingPOST",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Users group's unique identifier",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ "global" ]
        } ]
      }
    },
    "/v2/user-groups/{id}/members/{userId}" : {
      "post" : {
        "tags" : [ "user-groups" ],
        "summary" : "addMemberToUserGroup",
        "description" : "Service to add a member to a specific UserGroup entity",
        "operationId" : "addMemberToUserGroupUsingPOST",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Users group's unique identifier",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "description" : "User's unique identifier",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ "global" ]
        } ]
      }
    },
    "/v2/user-groups/{id}/suspend" : {
      "post" : {
        "tags" : [ "user-groups" ],
        "summary" : "suspendUserGroup",
        "description" : "Service that allows the suspension of a specific occurrence for the UserGroup entity by an Admin user",
        "operationId" : "suspendUserGroupUsingPOST",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Users group's unique identifier",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ "global" ]
        } ]
      }
    },
    "/v2/user-groups/{userGroupId}/members/{userId}" : {
      "delete" : {
        "tags" : [ "user-groups" ],
        "summary" : "deleteMemberFromUserGroup",
        "description" : "Service to delete a member from a specific UserGroup entity",
        "operationId" : "deleteMemberFromUserGroupUsingDELETE",
        "parameters" : [ {
          "name" : "userGroupId",
          "in" : "path",
          "description" : "Users group's unique identifier",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "description" : "User's unique identifier",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ "global" ]
        } ]
      }
    },
    "/v2/users/institution/{institutionId}" : {
      "get" : {
        "tags" : [ "user" ],
        "summary" : "getUsers",
        "description" : "Service to get all the users related to a specific institution",
        "operationId" : "v2GetUsersUsingGET",
        "parameters" : [ {
          "name" : "authenticated",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "authorities[0].authority",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "credentials",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "schema" : {
            "type" : "object"
          }
        }, {
          "name" : "details",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "schema" : {
            "type" : "object"
          }
        }, {
          "name" : "institutionId",
          "in" : "path",
          "description" : "Institution's unique internal identifier",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "principal",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "schema" : {
            "type" : "object"
          }
        }, {
          "name" : "productId",
          "in" : "query",
          "description" : "productId",
          "required" : false,
          "style" : "form",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "productRoles",
          "in" : "query",
          "description" : "productRoles",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ProductUserResource"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ "global" ]
        } ]
      }
    },
    "/v2/users/search" : {
      "post" : {
        "tags" : [ "user" ],
        "summary" : "search",
        "description" : "Retrieve the user for a given fiscal code",
        "operationId" : "v2SearchUserByFiscalCodeUsingPOST",
        "parameters" : [ {
          "name" : "institutionId",
          "in" : "query",
          "description" : "Institution's unique internal identifier",
          "required" : true,
          "style" : "form",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SearchUserDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserResource"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ "global" ]
        } ]
      }
    },
    "/v2/users/{id}" : {
      "get" : {
        "tags" : [ "user" ],
        "summary" : "getUserById",
        "description" : "Retrieve the user by internal id",
        "operationId" : "v2GetUserByIdUsingGET",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "User's unique identifier",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "institutionId",
          "in" : "query",
          "description" : "Institution's unique internal identifier",
          "required" : true,
          "style" : "form",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Fields to retrieve from pdv when searching for user",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserResource"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ "global" ]
        } ]
      },
      "put" : {
        "tags" : [ "user" ],
        "summary" : "updateUser",
        "description" : "Update previously added user",
        "operationId" : "v2UpdateUserUsingPUT",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "User's unique identifier",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "institutionId",
          "in" : "query",
          "description" : "Institution's unique internal identifier",
          "required" : true,
          "style" : "form",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateUserDto"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ "global" ]
        } ]
      }
    },
    "/v2/users/{userId}" : {
      "delete" : {
        "tags" : [ "user" ],
        "summary" : "deleteRelationshipById",
        "description" : "Delete the relationship",
        "operationId" : "v2DeleteRelationshipByIdUsingDELETE",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "User's unique identifier",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "institutionId",
          "in" : "query",
          "description" : "institutionId",
          "required" : true,
          "style" : "form",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "productId",
          "in" : "query",
          "description" : "productId",
          "required" : true,
          "style" : "form",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "productRole",
          "in" : "query",
          "description" : "productRole",
          "required" : false,
          "style" : "form",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ "global" ]
        } ]
      }
    },
    "/v2/users/{userId}/activate" : {
      "post" : {
        "tags" : [ "user" ],
        "summary" : "activateRelationship",
        "description" : "Activate the relationship",
        "operationId" : "v2ActivateRelationshipUsingPOST",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "User's unique identifier",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "institutionId",
          "in" : "query",
          "description" : "institutionId",
          "required" : true,
          "style" : "form",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "productId",
          "in" : "query",
          "description" : "productId",
          "required" : true,
          "style" : "form",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "productRole",
          "in" : "query",
          "description" : "productRole",
          "required" : false,
          "style" : "form",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ "global" ]
        } ]
      }
    },
    "/v2/users/{userId}/suspend" : {
      "post" : {
        "tags" : [ "user" ],
        "summary" : "suspendRelationship",
        "description" : "Suspend the relationship",
        "operationId" : "v2SuspendRelationshipUsingPOST",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "User's unique identifier",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "institutionId",
          "in" : "query",
          "description" : "Institution's identifier",
          "required" : true,
          "style" : "form",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "productId",
          "in" : "query",
          "description" : "productId",
          "required" : true,
          "style" : "form",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "productRole",
          "in" : "query",
          "description" : "productRole",
          "required" : false,
          "style" : "form",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ "global" ]
        } ]
      }
    }
  },
  "components" : {
    "schemas" : {
      "Attribute" : {
        "title" : "Attribute",
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "origin" : {
            "type" : "string"
          }
        }
      },
      "BackOfficeConfigurationsResource" : {
        "title" : "BackOfficeConfigurationsResource",
        "type" : "object",
        "properties" : {
          "environment" : {
            "type" : "string",
            "description" : "Back Office environment"
          },
          "url" : {
            "type" : "string",
            "description" : "URL that redirects to the back-office section, where is possible to manage the product"
          }
        }
      },
      "Billing" : {
        "title" : "Billing",
        "type" : "object",
        "properties" : {
          "publicServices" : {
            "type" : "boolean"
          },
          "recipientCode" : {
            "type" : "string"
          },
          "vatNumber" : {
            "type" : "string"
          }
        }
      },
      "BrokerResource" : {
        "title" : "BrokerResource",
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Partner's code"
          },
          "description" : {
            "type" : "string",
            "description" : "Partner's description"
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "Partner's enabling",
            "example" : false
          }
        }
      },
      "CertifiedFieldResourceOfstring" : {
        "title" : "CertifiedFieldResourceOfstring",
        "type" : "object",
        "properties" : {
          "certified" : {
            "type" : "boolean",
            "description" : "Indicates whether the value comes from a certified information source",
            "example" : false
          },
          "value" : {
            "type" : "string",
            "description" : "Field value"
          }
        }
      },
      "CreateUserDto" : {
        "title" : "CreateUserDto",
        "required" : [ "productRoles", "taxCode" ],
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string",
            "description" : "User's personal email",
            "format" : "email",
            "example" : "email@example.com"
          },
          "name" : {
            "type" : "string",
            "description" : "User's name"
          },
          "productRoles" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "User's roles in product",
            "items" : {
              "type" : "string"
            }
          },
          "surname" : {
            "type" : "string",
            "description" : "User's surname"
          },
          "taxCode" : {
            "type" : "string",
            "description" : "User's fiscal code"
          }
        }
      },
      "CreateUserGroupDto" : {
        "title" : "CreateUserGroupDto",
        "required" : [ "description", "institutionId", "members", "name", "productId" ],
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "description" : "Users group's description"
          },
          "institutionId" : {
            "type" : "string",
            "description" : "Users group's institutionId"
          },
          "members" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "List of all the members of the group",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          },
          "name" : {
            "type" : "string",
            "description" : "Users group's name"
          },
          "productId" : {
            "type" : "string",
            "description" : "Users group's productId"
          }
        }
      },
      "DataProtectionOfficer" : {
        "title" : "DataProtectionOfficer",
        "type" : "object",
        "properties" : {
          "address" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "pec" : {
            "type" : "string"
          }
        }
      },
      "DelegationIdResource" : {
        "title" : "DelegationIdResource",
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Delegation's unique identifier"
          }
        }
      },
      "DelegationRequestDto" : {
        "title" : "DelegationRequestDto",
        "required" : [ "from", "institutionFromName", "institutionToName", "productId", "to", "type" ],
        "type" : "object",
        "properties" : {
          "from" : {
            "type" : "string",
            "description" : "Institution's identifier"
          },
          "institutionFromName" : {
            "type" : "string",
            "description" : "Institution's name"
          },
          "institutionToName" : {
            "type" : "string",
            "description" : "Partner's name"
          },
          "productId" : {
            "type" : "string",
            "description" : "Product's identifier"
          },
          "to" : {
            "type" : "string",
            "description" : "Technical partner's identifier"
          },
          "type" : {
            "type" : "string",
            "description" : "Delegation type",
            "enum" : [ "AOO", "PT", "UO" ]
          }
        }
      },
      "DelegationResource" : {
        "title" : "DelegationResource",
        "type" : "object",
        "properties" : {
          "brokerId" : {
            "type" : "string"
          },
          "brokerName" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "institutionId" : {
            "type" : "string"
          },
          "institutionName" : {
            "type" : "string"
          },
          "institutionRootName" : {
            "type" : "string"
          },
          "productId" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "AOO", "PT", "UO" ]
          }
        }
      },
      "DelegationWithInfo" : {
        "title" : "DelegationWithInfo",
        "type" : "object",
        "properties" : {
          "brokerId" : {
            "type" : "string"
          },
          "brokerName" : {
            "type" : "string"
          },
          "brokerTaxCode" : {
            "type" : "string"
          },
          "brokerType" : {
            "type" : "string"
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "id" : {
            "type" : "string"
          },
          "institutionId" : {
            "type" : "string"
          },
          "institutionName" : {
            "type" : "string"
          },
          "institutionRootName" : {
            "type" : "string"
          },
          "institutionType" : {
            "type" : "string",
            "enum" : [ "AS", "CON", "GSP", "PA", "PG", "PSP", "PT", "REC", "SA", "SCP" ]
          },
          "productId" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string"
          },
          "taxCode" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "AOO", "PT", "UO" ]
          },
          "updatedAt" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "DelegationWithPagination" : {
        "title" : "DelegationWithPagination",
        "type" : "object",
        "properties" : {
          "delegations" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DelegationWithInfo"
            }
          },
          "pageInfo" : {
            "$ref" : "#/components/schemas/PageInfo"
          }
        }
      },
      "GeographicTaxonomy" : {
        "title" : "GeographicTaxonomy",
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string"
          },
          "desc" : {
            "type" : "string"
          }
        }
      },
      "GeographicTaxonomyDto" : {
        "title" : "GeographicTaxonomyDto",
        "required" : [ "code", "desc" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Institution's geographic taxonomy ISTAT code"
          },
          "desc" : {
            "type" : "string",
            "description" : "Institution's geographic taxonomy extended name"
          }
        }
      },
      "GeographicTaxonomyListDto" : {
        "title" : "GeographicTaxonomyListDto",
        "required" : [ "geographicTaxonomyDtoList" ],
        "type" : "object",
        "properties" : {
          "geographicTaxonomyDtoList" : {
            "type" : "array",
            "description" : "List of institution's geographic taxonomies",
            "items" : {
              "$ref" : "#/components/schemas/GeographicTaxonomyDto"
            }
          }
        }
      },
      "GeographicTaxonomyResource" : {
        "title" : "GeographicTaxonomyResource",
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Institution's geographic taxonomy ISTAT code"
          },
          "desc" : {
            "type" : "string",
            "description" : "Institution's geographic taxonomy extended name"
          }
        }
      },
      "IdentityTokenResource" : {
        "title" : "IdentityTokenResource",
        "required" : [ "token" ],
        "type" : "object",
        "properties" : {
          "token" : {
            "type" : "string",
            "description" : "The Identity Token"
          }
        }
      },
      "Institution" : {
        "title" : "Institution",
        "type" : "object",
        "properties" : {
          "address" : {
            "type" : "string"
          },
          "aooParentCode" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Attribute"
            }
          },
          "billing" : {
            "$ref" : "#/components/schemas/Billing"
          },
          "category" : {
            "type" : "string"
          },
          "city" : {
            "type" : "string"
          },
          "country" : {
            "type" : "string"
          },
          "county" : {
            "type" : "string"
          },
          "dataProtectionOfficer" : {
            "$ref" : "#/components/schemas/DataProtectionOfficer"
          },
          "delegation" : {
            "type" : "boolean"
          },
          "description" : {
            "type" : "string"
          },
          "digitalAddress" : {
            "type" : "string"
          },
          "externalId" : {
            "type" : "string"
          },
          "geographicTaxonomies" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/GeographicTaxonomy"
            }
          },
          "id" : {
            "type" : "string"
          },
          "institutionType" : {
            "type" : "string",
            "enum" : [ "AS", "CON", "GSP", "PA", "PG", "PSP", "PT", "REC", "SA", "SCP" ]
          },
          "onboarding" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OnboardedProduct"
            }
          },
          "origin" : {
            "type" : "string"
          },
          "originId" : {
            "type" : "string"
          },
          "paymentServiceProvider" : {
            "$ref" : "#/components/schemas/PaymentServiceProvider"
          },
          "rootParent" : {
            "$ref" : "#/components/schemas/RootParentResponse"
          },
          "subunitCode" : {
            "type" : "string"
          },
          "subunitType" : {
            "type" : "string"
          },
          "supportContact" : {
            "$ref" : "#/components/schemas/SupportContact"
          },
          "taxCode" : {
            "type" : "string"
          },
          "zipCode" : {
            "type" : "string"
          }
        }
      },
      "InstitutionBaseResource" : {
        "title" : "InstitutionBaseResource",
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Institution's unique internal identifier"
          },
          "name" : {
            "type" : "string",
            "description" : "Institution's name"
          },
          "parentDescription" : {
            "type" : "string",
            "description" : "Sub unit institution parent Description"
          },
          "status" : {
            "type" : "string",
            "description" : "Institution's status"
          },
          "userRole" : {
            "type" : "string",
            "description" : "Logged user's role"
          }
        }
      },
      "InstitutionResource" : {
        "title" : "InstitutionResource",
        "type" : "object",
        "properties" : {
          "address" : {
            "type" : "string",
            "description" : "Institution's physical address"
          },
          "aooParentCode" : {
            "type" : "string",
            "description" : "UO's parent AOO code"
          },
          "category" : {
            "type" : "string",
            "description" : "Institution's category"
          },
          "city" : {
            "type" : "string",
            "description" : "Institution's city"
          },
          "country" : {
            "type" : "string",
            "description" : "Institution's country"
          },
          "county" : {
            "type" : "string",
            "description" : "Institution's county"
          },
          "delegation" : {
            "type" : "boolean",
            "description" : "Institution's delegation presence",
            "example" : false
          },
          "externalId" : {
            "type" : "string",
            "description" : "Institution's unique external identifier"
          },
          "fiscalCode" : {
            "type" : "string",
            "description" : "Fiscal code corresponding to the institution"
          },
          "geographicTaxonomies" : {
            "type" : "array",
            "description" : "Institution's geographic taxonomy",
            "items" : {
              "$ref" : "#/components/schemas/GeographicTaxonomyResource"
            }
          },
          "id" : {
            "type" : "string",
            "description" : "Institution's unique internal identifier"
          },
          "institutionType" : {
            "type" : "string",
            "description" : "Institution's type",
            "enum" : [ "AS", "CON", "GSP", "PA", "PG", "PSP", "PT", "REC", "SA", "SCP" ]
          },
          "mailAddress" : {
            "type" : "string",
            "description" : "Institution's email address"
          },
          "name" : {
            "type" : "string",
            "description" : "Institution's name"
          },
          "origin" : {
            "type" : "string",
            "description" : "Institution's data origin"
          },
          "originId" : {
            "type" : "string",
            "description" : "Institution's identifier related to origin"
          },
          "parentDescription" : {
            "type" : "string",
            "description" : "Sub unit institution parent Description"
          },
          "products" : {
            "type" : "array",
            "description" : "Authorized user products",
            "items" : {
              "$ref" : "#/components/schemas/OnboardedProductResource"
            }
          },
          "recipientCode" : {
            "type" : "string",
            "description" : "Billing recipient code"
          },
          "status" : {
            "type" : "string",
            "description" : "Institution's status"
          },
          "subunitCode" : {
            "type" : "string",
            "description" : "AOO o UO unique code"
          },
          "subunitType" : {
            "type" : "string",
            "description" : "Institution's subunit type"
          },
          "supportContact" : {
            "description" : "'Institution's assistance contacts'",
            "$ref" : "#/components/schemas/SupportContactResource"
          },
          "userRole" : {
            "type" : "string",
            "description" : "Logged user's role"
          },
          "vatNumber" : {
            "type" : "string",
            "description" : "Institution's VAT number"
          },
          "vatNumberGroup" : {
            "type" : "boolean",
            "description" : "PSP's Vat Number group",
            "example" : false
          },
          "zipCode" : {
            "type" : "string",
            "description" : "Institution's zipCode"
          }
        }
      },
      "InstitutionUserDetailsResource" : {
        "title" : "InstitutionUserDetailsResource",
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string",
            "description" : "User's personal email"
          },
          "fiscalCode" : {
            "type" : "string",
            "description" : "User's fiscal code"
          },
          "id" : {
            "type" : "string",
            "description" : "User's unique identifier",
            "format" : "uuid"
          },
          "name" : {
            "type" : "string",
            "description" : "User's name"
          },
          "products" : {
            "type" : "array",
            "description" : "Authorized user products",
            "items" : {
              "$ref" : "#/components/schemas/ProductInfoResource"
            }
          },
          "role" : {
            "type" : "string",
            "description" : "User's role",
            "enum" : [ "ADMIN", "LIMITED" ]
          },
          "status" : {
            "type" : "string",
            "description" : "User's status"
          },
          "surname" : {
            "type" : "string",
            "description" : "User's surname"
          }
        }
      },
      "InvalidParam" : {
        "title" : "InvalidParam",
        "required" : [ "name", "reason" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Invalid parameter name."
          },
          "reason" : {
            "type" : "string",
            "description" : "Invalid parameter reason."
          }
        }
      },
      "OnboardedProduct" : {
        "title" : "OnboardedProduct",
        "type" : "object",
        "properties" : {
          "authorized" : {
            "type" : "boolean"
          },
          "billing" : {
            "$ref" : "#/components/schemas/Billing"
          },
          "productId" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string",
            "enum" : [ "ACTIVE", "DELETED", "PENDING", "REJECTED", "SUSPENDED", "TOBEVALIDATED" ]
          },
          "userRole" : {
            "type" : "string"
          }
        }
      },
      "OnboardedProductResource" : {
        "title" : "OnboardedProductResource",
        "type" : "object",
        "properties" : {
          "authorized" : {
            "type" : "boolean"
          },
          "billing" : {
            "$ref" : "#/components/schemas/Billing"
          },
          "productId" : {
            "type" : "string"
          },
          "productOnBoardingStatus" : {
            "type" : "string",
            "enum" : [ "ACTIVE", "DELETED", "PENDING", "REJECTED", "SUSPENDED", "TOBEVALIDATED" ]
          },
          "userRole" : {
            "type" : "string"
          }
        }
      },
      "PageInfo" : {
        "title" : "PageInfo",
        "type" : "object",
        "properties" : {
          "pageNo" : {
            "type" : "integer",
            "format" : "int64"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalElements" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalPages" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "PageOfUserGroupPlainResource" : {
        "title" : "PageOfUserGroupPlainResource",
        "required" : [ "content", "number", "size", "totalElements", "totalPages" ],
        "type" : "object",
        "properties" : {
          "content" : {
            "type" : "array",
            "description" : "The page content",
            "items" : {
              "$ref" : "#/components/schemas/UserGroupPlainResource"
            }
          },
          "number" : {
            "type" : "integer",
            "description" : "The number of the current page",
            "format" : "int32"
          },
          "size" : {
            "type" : "integer",
            "description" : "The size of the page",
            "format" : "int32"
          },
          "totalElements" : {
            "type" : "integer",
            "description" : "The total amount of elements",
            "format" : "int64"
          },
          "totalPages" : {
            "type" : "integer",
            "description" : "The number of total pages",
            "format" : "int32"
          }
        }
      },
      "PaymentServiceProvider" : {
        "title" : "PaymentServiceProvider",
        "type" : "object",
        "properties" : {
          "abiCode" : {
            "type" : "string"
          },
          "businessRegisterNumber" : {
            "type" : "string"
          },
          "legalRegisterName" : {
            "type" : "string"
          },
          "legalRegisterNumber" : {
            "type" : "string"
          },
          "vatNumberGroup" : {
            "type" : "boolean"
          }
        }
      },
      "PlainUserResource" : {
        "title" : "PlainUserResource",
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "User's unique identifier",
            "format" : "uuid"
          },
          "name" : {
            "type" : "string",
            "description" : "User's name"
          },
          "surname" : {
            "type" : "string",
            "description" : "User's surname"
          }
        }
      },
      "Problem" : {
        "title" : "Problem",
        "required" : [ "status", "title" ],
        "type" : "object",
        "properties" : {
          "detail" : {
            "type" : "string",
            "description" : "Human-readable description of this specific problem."
          },
          "instance" : {
            "type" : "string",
            "description" : "A URI that describes where the problem occurred."
          },
          "invalidParams" : {
            "type" : "array",
            "description" : "A list of invalid parameters details.",
            "items" : {
              "$ref" : "#/components/schemas/InvalidParam"
            }
          },
          "status" : {
            "type" : "integer",
            "description" : "The HTTP status code.",
            "format" : "int32",
            "example" : 500
          },
          "title" : {
            "type" : "string",
            "description" : "Short human-readable summary of the problem."
          },
          "type" : {
            "type" : "string",
            "description" : "A URL to a page with more details regarding the problem."
          }
        },
        "description" : "A \"problem detail\" as a way to carry machine-readable details of errors (https://datatracker.ietf.org/doc/html/rfc7807)"
      },
      "ProductInfoResource" : {
        "title" : "ProductInfoResource",
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Product's unique identifier"
          },
          "roleInfos" : {
            "type" : "array",
            "description" : "User's role infos in product",
            "items" : {
              "$ref" : "#/components/schemas/ProductRoleInfoResource"
            }
          },
          "title" : {
            "type" : "string",
            "description" : "Product's title"
          }
        }
      },
      "ProductRoleInfoResource" : {
        "title" : "ProductRoleInfoResource",
        "type" : "object",
        "properties" : {
          "relationshipId" : {
            "type" : "string",
            "description" : "Unique relationship identifier between User and Product"
          },
          "role" : {
            "type" : "string",
            "description" : "User's role in product"
          },
          "selcRole" : {
            "type" : "string",
            "description" : "User's role",
            "enum" : [ "ADMIN", "LIMITED" ]
          },
          "status" : {
            "type" : "string",
            "description" : "User's status"
          }
        }
      },
      "ProductRoleMappingsResource" : {
        "title" : "ProductRoleMappingsResource",
        "type" : "object",
        "properties" : {
          "multiroleAllowed" : {
            "type" : "boolean",
            "description" : "Indicates if an User can have more than one product role",
            "example" : false
          },
          "partyRole" : {
            "type" : "string",
            "description" : "Party role",
            "enum" : [ "DELEGATE", "MANAGER", "OPERATOR", "SUB_DELEGATE" ]
          },
          "productRoles" : {
            "type" : "array",
            "description" : "Available product roles",
            "items" : {
              "$ref" : "#/components/schemas/ProductRoleResource"
            }
          },
          "selcRole" : {
            "type" : "string",
            "description" : "Self Care role",
            "enum" : [ "ADMIN", "LIMITED" ]
          }
        }
      },
      "ProductRoleResource" : {
        "title" : "ProductRoleResource",
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Product role internal code"
          },
          "description" : {
            "type" : "string",
            "description" : "Product role description"
          },
          "label" : {
            "type" : "string",
            "description" : "Product role label"
          }
        }
      },
      "ProductUserResource" : {
        "title" : "ProductUserResource",
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string",
            "description" : "User's personal email"
          },
          "id" : {
            "type" : "string",
            "description" : "User's unique identifier",
            "format" : "uuid"
          },
          "name" : {
            "type" : "string",
            "description" : "User's name"
          },
          "product" : {
            "description" : "Authorized user product",
            "$ref" : "#/components/schemas/ProductInfoResource"
          },
          "role" : {
            "type" : "string",
            "description" : "User's role",
            "enum" : [ "ADMIN", "LIMITED" ]
          },
          "status" : {
            "type" : "string",
            "description" : "User's status"
          },
          "surname" : {
            "type" : "string",
            "description" : "User's surname"
          }
        }
      },
      "ProductsResource" : {
        "title" : "ProductsResource",
        "type" : "object",
        "properties" : {
          "backOfficeEnvironmentConfigurations" : {
            "type" : "array",
            "description" : "Environment-specific configurations for back-office redirection with Token Exchange",
            "items" : {
              "$ref" : "#/components/schemas/BackOfficeConfigurationsResource"
            }
          },
          "children" : {
            "type" : "array",
            "description" : "Product's sub products list",
            "items" : {
              "$ref" : "#/components/schemas/SubProductResource"
            }
          },
          "delegable" : {
            "type" : "boolean",
            "description" : "If a product is delegable to a technical partner",
            "example" : false
          },
          "description" : {
            "type" : "string",
            "description" : "Product's description"
          },
          "id" : {
            "type" : "string",
            "description" : "Product's unique identifier"
          },
          "imageUrl" : {
            "type" : "string",
            "description" : "Product's depict image"
          },
          "invoiceable" : {
            "type" : "boolean",
            "description" : "If a product is invoiceable",
            "example" : false
          },
          "logo" : {
            "type" : "string",
            "description" : "Product's logo"
          },
          "logoBgColor" : {
            "type" : "string",
            "description" : "Product logo's background color"
          },
          "status" : {
            "type" : "string",
            "description" : "Product's status",
            "enum" : [ "ACTIVE", "INACTIVE", "PHASE_OUT", "TESTING" ]
          },
          "title" : {
            "type" : "string",
            "description" : "Product's title"
          },
          "urlBO" : {
            "type" : "string",
            "description" : "URL that redirects to the back-office section, where is possible to manage the product"
          },
          "urlPublic" : {
            "type" : "string",
            "description" : "URL that redirects to the public information webpage of the product"
          }
        }
      },
      "RootParentResponse" : {
        "title" : "RootParentResponse",
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          }
        }
      },
      "SearchUserDto" : {
        "title" : "SearchUserDto",
        "required" : [ "fiscalCode" ],
        "type" : "object",
        "properties" : {
          "fiscalCode" : {
            "type" : "string",
            "description" : "User's fiscal code"
          }
        }
      },
      "SubProductResource" : {
        "title" : "SubProductResource",
        "type" : "object",
        "properties" : {
          "delegable" : {
            "type" : "boolean",
            "description" : "If a product is delegable to a technical partner",
            "example" : false
          },
          "description" : {
            "type" : "string",
            "description" : "Product's description"
          },
          "id" : {
            "type" : "string",
            "description" : "Product's unique identifier"
          },
          "imageUrl" : {
            "type" : "string",
            "description" : "Product's depict image"
          },
          "invoiceable" : {
            "type" : "boolean",
            "description" : "If a product is invoiceable",
            "example" : false
          },
          "logo" : {
            "type" : "string",
            "description" : "Product's logo"
          },
          "logoBgColor" : {
            "type" : "string",
            "description" : "Product logo's background color"
          },
          "productOnBoardingStatus" : {
            "type" : "string",
            "description" : "Product's onBoarding status",
            "enum" : [ "ACTIVE", "INACTIVE", "PENDING" ]
          },
          "status" : {
            "type" : "string",
            "description" : "Product's status",
            "enum" : [ "ACTIVE", "INACTIVE", "PHASE_OUT", "TESTING" ]
          },
          "title" : {
            "type" : "string",
            "description" : "Product's title"
          },
          "urlPublic" : {
            "type" : "string",
            "description" : "URL that redirects to the public information webpage of the product"
          }
        }
      },
      "SupportContact" : {
        "title" : "SupportContact",
        "type" : "object",
        "properties" : {
          "supportEmail" : {
            "type" : "string"
          },
          "supportPhone" : {
            "type" : "string"
          }
        }
      },
      "SupportContactResource" : {
        "title" : "SupportContactResource",
        "type" : "object",
        "properties" : {
          "supportEmail" : {
            "type" : "string",
            "description" : "Institution's support email contact"
          },
          "supportPhone" : {
            "type" : "string",
            "description" : "Institution's support phone contact"
          }
        }
      },
      "SupportRequestDto" : {
        "title" : "SupportRequestDto",
        "required" : [ "email" ],
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string",
            "description" : "User's email",
            "format" : "email",
            "example" : "email@example.com"
          },
          "institutionId" : {
            "type" : "string",
            "description" : "Institution's identifier"
          },
          "productId" : {
            "type" : "string",
            "description" : "Product's identifier"
          },
          "userId" : {
            "type" : "string",
            "description" : "User's identifier"
          }
        }
      },
      "SupportResponse" : {
        "title" : "SupportResponse",
        "type" : "object",
        "properties" : {
          "actionUrl" : {
            "type" : "string"
          },
          "jwt" : {
            "type" : "string"
          },
          "redirectUrl" : {
            "type" : "string"
          }
        }
      },
      "UpdateInstitutionDto" : {
        "title" : "UpdateInstitutionDto",
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "description" : "Institution's description"
          },
          "digitalAddress" : {
            "type" : "string",
            "description" : "Institution's email address"
          }
        }
      },
      "UpdateUserDto" : {
        "title" : "UpdateUserDto",
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string",
            "description" : "User's institutional email",
            "format" : "email",
            "example" : "email@example.com"
          },
          "name" : {
            "type" : "string",
            "description" : "User's name"
          },
          "surname" : {
            "type" : "string",
            "description" : "User's surname"
          }
        }
      },
      "UpdateUserGroupDto" : {
        "title" : "UpdateUserGroupDto",
        "required" : [ "description", "members", "name" ],
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "description" : "Users group's description"
          },
          "members" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "List of all the members of the group",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          },
          "name" : {
            "type" : "string",
            "description" : "Users group's name"
          }
        }
      },
      "UserGroupIdResource" : {
        "title" : "UserGroupIdResource",
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Users group's unique identifier"
          }
        }
      },
      "UserGroupPlainResource" : {
        "title" : "UserGroupPlainResource",
        "type" : "object",
        "properties" : {
          "createdAt" : {
            "type" : "string",
            "description" : "Date on which the group was created",
            "format" : "date-time"
          },
          "createdBy" : {
            "type" : "string",
            "description" : "User by which the group was created",
            "format" : "uuid"
          },
          "description" : {
            "type" : "string",
            "description" : "Users group's description"
          },
          "id" : {
            "type" : "string",
            "description" : "Users group's unique identifier"
          },
          "institutionId" : {
            "type" : "string",
            "description" : "Users group's institutionId"
          },
          "membersCount" : {
            "type" : "integer",
            "description" : "Number all the members of the group",
            "format" : "int32"
          },
          "modifiedAt" : {
            "type" : "string",
            "description" : "Date on which the group was modified",
            "format" : "date-time"
          },
          "modifiedBy" : {
            "type" : "string",
            "description" : "User by which the group was modified",
            "format" : "uuid"
          },
          "name" : {
            "type" : "string",
            "description" : "Users group's name"
          },
          "productId" : {
            "type" : "string",
            "description" : "Users group's productId"
          },
          "status" : {
            "type" : "string",
            "description" : "Users group's status",
            "enum" : [ "ACTIVE", "DELETED", "SUSPENDED" ]
          }
        }
      },
      "UserGroupResource" : {
        "title" : "UserGroupResource",
        "type" : "object",
        "properties" : {
          "createdAt" : {
            "type" : "string",
            "description" : "Date on which the group was created",
            "format" : "date-time"
          },
          "createdBy" : {
            "description" : "User by which the group was created",
            "$ref" : "#/components/schemas/PlainUserResource"
          },
          "description" : {
            "type" : "string",
            "description" : "Users group's description"
          },
          "id" : {
            "type" : "string",
            "description" : "Users group's unique identifier"
          },
          "institutionId" : {
            "type" : "string",
            "description" : "Users group's institutionId"
          },
          "members" : {
            "type" : "array",
            "description" : "List of all the members of the group",
            "items" : {
              "$ref" : "#/components/schemas/ProductUserResource"
            }
          },
          "modifiedAt" : {
            "type" : "string",
            "description" : "Date on which the group was modified",
            "format" : "date-time"
          },
          "modifiedBy" : {
            "description" : "User by which the group was modified",
            "$ref" : "#/components/schemas/PlainUserResource"
          },
          "name" : {
            "type" : "string",
            "description" : "Users group's name"
          },
          "productId" : {
            "type" : "string",
            "description" : "Users group's productId"
          },
          "status" : {
            "type" : "string",
            "description" : "Users group's status",
            "enum" : [ "ACTIVE", "DELETED", "SUSPENDED" ]
          }
        }
      },
      "UserIdResource" : {
        "title" : "UserIdResource",
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "User's unique identifier",
            "format" : "uuid"
          }
        }
      },
      "UserProductRoles" : {
        "title" : "UserProductRoles",
        "type" : "object",
        "properties" : {
          "productRoles" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "UserResource" : {
        "title" : "UserResource",
        "type" : "object",
        "properties" : {
          "email" : {
            "description" : "User's institutional email",
            "$ref" : "#/components/schemas/CertifiedFieldResourceOfstring"
          },
          "familyName" : {
            "description" : "User's surname",
            "$ref" : "#/components/schemas/CertifiedFieldResourceOfstring"
          },
          "fiscalCode" : {
            "type" : "string",
            "description" : "User's fiscal code"
          },
          "id" : {
            "type" : "string",
            "description" : "User's unique identifier",
            "format" : "uuid"
          },
          "name" : {
            "description" : "User's name",
            "$ref" : "#/components/schemas/CertifiedFieldResourceOfstring"
          },
          "workContacts" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/WorkContactResource"
            },
            "description" : "User's workcontacts, contains the emails associated to every institution the user is assigned to"
          }
        }
      },
      "WorkContactResource" : {
        "title" : "WorkContactResource",
        "type" : "object",
        "properties" : {
          "email" : {
            "description" : "User's institutional email",
            "$ref" : "#/components/schemas/CertifiedFieldResourceOfstring"
          }
        }
      }
    },
    "securitySchemes" : {
      "bearerAuth" : {
        "type" : "http",
        "description" : "A bearer token in the format of a JWS and conformed to the specifications included in [RFC8725](https://tools.ietf.org/html/RFC8725)",
        "scheme" : "bearer",
        "bearerFormat" : "JWT"
      }
    }
  }
}