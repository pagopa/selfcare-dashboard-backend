{
  "openapi": "3.0.3",
  "info": {
    "title": "selc-dashboard",
    "description": "Self Care Dashboard API documentation",
    "version": "0.0.1-SNAPSHOT"
  },
  "servers": [
    {
      "url": "http://localhost:80",
      "description": "Inferred Url"
    }
  ],
  "tags": [
    {
      "name": "institutions",
      "description": "Institution operations"
    },
    {
      "name": "products",
      "description": "Products operations"
    },
    {
      "name": "relationships",
      "description": "Relationships operations"
    },
    {
      "name": "token",
      "description": "Token operations"
    },
    {
      "name": "user",
      "description": "User Controller"
    }
  ],
  "paths": {
    "/institutions": {
      "get": {
        "tags": [
          "institutions"
        ],
        "summary": "getInstitutions",
        "description": "Service to get all the institutions related to logged user",
        "operationId": "getInstitutionsUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InstitutionResource"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security" : [ {
          "bearerAuth" : [ "global" ]
        } ]
      }
    },
    "/institutions/{institutionId}" : {
      "get" : {
        "tags" : [ "institutions" ],
        "summary" : "getInstitution",
        "description" : "Service to get a specific institution related to logged user",
        "operationId" : "getInstitutionUsingGET",
        "parameters" : [ {
          "name" : "institutionId",
          "in" : "path",
          "description" : "Institution's unique identifier (i.e.: IPA code)",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InstitutionResource"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "bearerAuth" : [ "global" ]
        } ]
      }
    },
    "/institutions/{institutionId}/logo" : {
      "put" : {
        "tags" : [ "institutions" ],
        "summary" : "saveInstitutionLogo",
        "description" : "Service to upload and store the institution's logo",
        "operationId" : "saveInstitutionLogoUsingPUT",
        "parameters" : [ {
          "name" : "institutionId",
          "in" : "path",
          "description" : "Institution's unique identifier (i.e.: IPA code)",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "required" : [ "logo" ],
                "type" : "object",
                "properties" : {
                  "logo" : {
                    "type" : "string",
                    "description" : "Institution's logo",
                    "format" : "binary"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              },
              "multipart/form-data" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "bearerAuth" : [ "global" ]
        } ]
      }
    },
    "/institutions/{institutionId}/products" : {
      "get" : {
        "tags" : [ "institutions" ],
        "summary" : "getInstitutionProducts",
        "description" : "Service to get all the products related to a specific institution",
        "operationId" : "getInstitutionProductsUsingGET",
        "parameters" : [ {
          "name" : "institutionId",
          "in" : "path",
          "description" : "Institution's unique identifier (i.e.: IPA code)",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ProductsResource"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "bearerAuth" : [ "global" ]
        } ]
      }
    },
    "/institutions/{institutionId}/products/{productId}/users" : {
      "get" : {
        "tags": [
          "institutions"
        ],
        "summary": "getInstitutionProductUsers",
        "description": "Service to get all the users related to a specific pair of institution-product",
        "operationId": "getInstitutionProductUsersUsingGET",
        "parameters": [
          {
            "name": "institutionId",
            "in": "path",
            "description": "Institution's unique identifier (i.e.: IPA code)",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productId",
            "in": "path",
            "description": "Product's unique identifier",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "role",
            "in": "query",
            "description": "User's role",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string",
              "enum": [
                "ADMIN",
                "LIMITED"
              ]
            }
          },
          {
            "name": "productRoles",
            "in": "query",
            "description": "User's roles in product",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductUserResource"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security" : [ {
          "bearerAuth" : [ "global" ]
        } ]
      },
      "post" : {
        "tags" : [ "institutions" ],
        "summary" : "createInstitutionProductUser",
        "description" : "Service to Create a user related to a specific pair of institution-product",
        "operationId" : "createInstitutionProductUserUsingPOST",
        "parameters" : [ {
          "name" : "institutionId",
          "in" : "path",
          "description" : "Institution's unique identifier (i.e.: IPA code)",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "productId",
          "in" : "path",
          "description" : "Product's unique identifier",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateUserDto"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "bearerAuth" : [ "global" ]
        } ]
      }
    },
    "/institutions/{institutionId}/users" : {
      "get" : {
        "tags": [
          "institutions"
        ],
        "summary": "getInstitutionUsers",
        "description": "Service to get all the users related to a specific pair of institution-product",
        "operationId": "getInstitutionUsersUsingGET",
        "parameters": [
          {
            "name": "institutionId",
            "in": "path",
            "description": "Institution's unique identifier (i.e.: IPA code)",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productId",
            "in": "query",
            "description": "Product's unique identifier",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "role",
            "in": "query",
            "description": "User's role",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string",
              "enum": [
                "ADMIN",
                "LIMITED"
              ]
            }
          },
          {
            "name": "productRoles",
            "in": "query",
            "description": "User's roles in product",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InstitutionUserResource"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerAuth": [
              "global"
            ]
          }
        ]
      }
    },
    "/institutions/{institutionId}/users/{userId}": {
      "get": {
        "tags": [
          "institutions"
        ],
        "summary": "getInstitutionUser",
        "description": "${swagger.dashboard.institutions.api.getInstitutionUser}",
        "operationId": "getInstitutionUserUsingGET",
        "parameters": [
          {
            "name": "institutionId",
            "in": "path",
            "description": "Institution's unique identifier (i.e.: IPA code)",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "User's unique identifier",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstitutionUserResource"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerAuth": [
              "global"
            ]
          }
        ]
      }
    },
    "/products/{productId}/roles": {
      "get": {
        "tags": [
          "products"
        ],
        "summary": "getProductRoles",
        "description": "Service to get the Product roles",
        "operationId": "getProductRolesUsingGET",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "Product's unique identifier",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductRoleMappingsResource"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerAuth": [
              "global"
            ]
          }
        ]
      }
    },
    "/relationships/{relationshipId}": {
      "delete": {
        "tags": [
          "relationships"
        ],
        "summary": "deleteRelationshipById",
        "description": "Delete the relationship",
        "operationId": "deleteRelationshipByIdUsingDELETE",
        "parameters": [
          {
            "name": "relationshipId",
            "in": "path",
            "description": "Unique relationship identifier between User and Product",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "bearerAuth": [
              "global"
            ]
          }
        ]
      }
    },
    "/relationships/{relationshipId}/activate": {
      "post": {
        "tags": [
          "relationships"
        ],
        "summary": "activateRelationship",
        "description": "Activate the relationship",
        "operationId": "activateRelationshipUsingPOST",
        "parameters": [
          {
            "name": "relationshipId",
            "in": "path",
            "description": "Unique relationship identifier between User and Product",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security" : [ {
          "bearerAuth" : [ "global" ]
        } ]
      }
    },
    "/relationships/{relationshipId}/suspend" : {
      "post" : {
        "tags" : [ "relationships" ],
        "summary" : "suspendRelationship",
        "description" : "Suspend the relationship",
        "operationId" : "suspendRelationshipUsingPOST",
        "parameters" : [ {
          "name" : "relationshipId",
          "in" : "path",
          "description" : "Unique relationship identifier between User and Product",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Created"
          },
          "204" : {
            "description" : "No Content"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "bearerAuth" : [ "global" ]
        } ]
      }
    },
    "/token/exchange" : {
      "get" : {
        "tags" : [ "token" ],
        "summary" : "exchange",
        "description" : "Service create an 'Identity Token' based on a Self Care session token",
        "operationId" : "exchangeUsingGET",
        "parameters" : [ {
          "name" : "institutionId",
          "in" : "query",
          "description" : "Institution's unique identifier (i.e.: IPA code)",
          "required" : true,
          "style" : "form",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "productId",
          "in" : "query",
          "description" : "Product's unique identifier",
          "required" : true,
          "style" : "form",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "realm",
          "in" : "query",
          "description" : "The domain for which the requested token is valid",
          "required" : true,
          "style" : "form",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdentityTokenResource"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerAuth": [
              "global"
            ]
          }
        ]
      }
    },
    "/users/external-id": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "getUserByExternalId",
        "description": "Retrieve the user for a given internal id ",
        "operationId": "getUserByExternalIdUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmbeddedExternalIdDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResource"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerAuth": [
              "global"
            ]
          }
        ]
      }
    }
  },
  "components" : {
    "schemas" : {
      "CreateUserDto" : {
        "title": "CreateUserDto",
        "required": [
          "email",
          "name",
          "productRoles",
          "surname",
          "taxCode"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email"
          },
          "name": {
            "type": "string",
            "description": "User's name"
          },
          "productRoles": {
            "uniqueItems": true,
            "type": "array",
            "description": "User's roles in product",
            "items": {
              "type": "string"
            }
          },
          "surname": {
            "type": "string",
            "description": "User's surname"
          },
          "taxCode": {
            "type": "string",
            "description": "User's fiscal code"
          }
        }
      },
      "EmbeddedExternalIdDto": {
        "title": "EmbeddedExternalIdDto",
        "type": "object",
        "properties": {
          "externalId": {
            "type": "string"
          }
        }
      },
      "IdentityTokenResource": {
        "title": "IdentityTokenResource",
        "required": [
          "token"
        ],
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "The Identity Token"
          }
        }
      },
      "InstitutionResource": {
        "title": "InstitutionResource",
        "required": [
          "fiscalCode",
          "id",
          "mailAddress",
          "name",
          "status",
          "userRole"
        ],
        "type": "object",
        "properties": {
          "category": {
            "type": "string",
            "description": "Institution's category"
          },
          "fiscalCode": {
            "type": "string",
            "description": "Fiscal code corresponding to the institution"
          },
          "id": {
            "type": "string",
            "description": "Institution's unique identifier (i.e.: IPA code)"
          },
          "mailAddress": {
            "type": "string",
            "description": "Institution's email address"
          },
          "name": {
            "type": "string",
            "description": "Institution's name"
          },
          "status": {
            "type": "string",
            "description": "Institution's status"
          },
          "userRole": {
            "type": "string",
            "description": "Logged user's role"
          }
        }
      },
      "InstitutionUserResource" : {
        "title": "InstitutionUserResource",
        "required": [
          "certification",
          "email",
          "fiscalCode",
          "id",
          "name",
          "products",
          "role",
          "status",
          "surname"
        ],
        "type": "object",
        "properties": {
          "certification": {
            "type": "boolean",
            "description": "User provided with certification",
            "example": false
          },
          "email": {
            "type": "string",
            "description": "User's email"
          },
          "fiscalCode": {
            "type": "string",
            "description": "User's fiscal code"
          },
          "id": {
            "type": "string",
            "description": "User's unique identifier"
          },
          "name": {
            "type": "string",
            "description": "User's name"
          },
          "products": {
            "type": "array",
            "description": "Authorized user products",
            "items": {
              "$ref": "#/components/schemas/ProductInfoResource"
            }
          },
          "role": {
            "type": "string",
            "description": "User's role",
            "enum": [
              "ADMIN",
              "LIMITED"
            ]
          },
          "status": {
            "type": "string",
            "description": "User's status"
          },
          "surname": {
            "type": "string",
            "description": "User's surname"
          }
        }
      },
      "ProductInfoResource": {
        "title": "ProductInfoResource",
        "required": [
          "id",
          "roleInfos",
          "title"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Product's unique identifier"
          },
          "roleInfos": {
            "type": "array",
            "description": "User's role infos in product",
            "items": {
              "$ref": "#/components/schemas/ProductRoleInfoResource"
            }
          },
          "title": {
            "type": "string",
            "description": "Product's title"
          }
        }
      },
      "ProductRoleInfoResource": {
        "title": "ProductRoleInfoResource",
        "required": [
          "relationshipId",
          "role",
          "selcRole",
          "status"
        ],
        "type": "object",
        "properties": {
          "relationshipId": {
            "type": "string",
            "description": "Unique relationship identifier between User and Product"
          },
          "role": {
            "type": "string",
            "description": "User's role in product"
          },
          "selcRole": {
            "type": "string",
            "description": "User's role",
            "enum": [
              "ADMIN",
              "LIMITED"
            ]
          },
          "status": {
            "type": "string",
            "description": "User's status"
          }
        }
      },
      "ProductRoleMappingsResource": {
        "title": "ProductRoleMappingsResource",
        "required": [
          "multiroleAllowed",
          "partyRole",
          "productRoles",
          "selcRole"
        ],
        "type": "object",
        "properties": {
          "multiroleAllowed": {
            "type": "boolean",
            "description": "Indicates if an User can have more than one product role",
            "example": false
          },
          "partyRole": {
            "type": "string",
            "description": "Party role",
            "enum": [
              "DELEGATE",
              "MANAGER",
              "OPERATOR",
              "SUB_DELEGATE"
            ]
          },
          "productRoles": {
            "type": "array",
            "description": "Available product roles",
            "items": {
              "$ref": "#/components/schemas/ProductRoleResource"
            }
          },
          "selcRole": {
            "type": "string",
            "description": "Self Care role",
            "enum": [
              "ADMIN",
              "LIMITED"
            ]
          }
        }
      },
      "ProductRoleResource": {
        "title": "ProductRoleResource",
        "required": [
          "code",
          "description",
          "label"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Product role internal code"
          },
          "description": {
            "type": "string",
            "description": "Product role description"
          },
          "label": {
            "type": "string",
            "description": "Product role label"
          }
        }
      },
      "ProductUserResource": {
        "title": "ProductUserResource",
        "required": [
          "certification",
          "email",
          "fiscalCode",
          "id",
          "name",
          "product",
          "role",
          "status",
          "surname"
        ],
        "type": "object",
        "properties": {
          "certification": {
            "type": "boolean",
            "description": "User provided with certification",
            "example": false
          },
          "email": {
            "type": "string",
            "description": "User's email"
          },
          "fiscalCode": {
            "type": "string",
            "description": "User's fiscal code"
          },
          "id": {
            "type": "string",
            "description": "User's unique identifier"
          },
          "name": {
            "type": "string",
            "description": "User's name"
          },
          "product": {
            "description": "Authorized user product",
            "$ref": "#/components/schemas/ProductInfoResource"
          },
          "role": {
            "type": "string",
            "description": "User's role",
            "enum": [
              "ADMIN",
              "LIMITED"
            ]
          },
          "status": {
            "type": "string",
            "description": "User's status"
          },
          "surname": {
            "type": "string",
            "description": "User's surname"
          }
        }
      },
      "ProductsResource" : {
        "title" : "ProductsResource",
        "required" : [ "authorized", "description", "id", "logo", "status", "title", "urlBO" ],
        "type" : "object",
        "properties" : {
          "activatedAt": {
            "type": "string",
            "description": "Date the products was activated",
            "format": "date-time"
          },
          "authorized": {
            "type": "boolean",
            "description": "flag indicating whether the logged user has the authorization to manage the product",
            "example": false
          },
          "description": {
            "type": "string",
            "description": "Product's description"
          },
          "id": {
            "type": "string",
            "description": "Product's unique identifier"
          },
          "logo": {
            "type": "string",
            "description": "Product's logo"
          },
          "status": {
            "type": "string",
            "description": "Product's status",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "PENDING"
            ]
          },
          "title": {
            "type": "string",
            "description": "Product's title"
          },
          "urlBO": {
            "type": "string",
            "description": "URL that redirects to the back-office section, where is possible to manage the product"
          },
          "urlPublic": {
            "type": "string",
            "description": "URL that redirects to the public information webpage of the product"
          },
          "userRole": {
            "type": "string",
            "description": "Logged user's role"
          }
        }
      },
      "UserResource": {
        "title": "UserResource",
        "required": [
          "certification",
          "email",
          "fiscalCode",
          "name",
          "surname"
        ],
        "type": "object",
        "properties": {
          "certification": {
            "type": "boolean",
            "description": "User's certification source",
            "example": false
          },
          "email": {
            "type": "string",
            "description": "User's email"
          },
          "fiscalCode": {
            "type": "string",
            "description": "User's fiscal code"
          },
          "name": {
            "type": "string",
            "description": "User's name"
          },
          "surname": {
            "type": "string",
            "description": "User's surname"
          }
        }
      }
    },
    "securitySchemes" : {
      "bearerAuth" : {
        "type" : "http",
        "description" : "A bearer token in the format of a JWS and conformed to the specifications included in [RFC8725](https://tools.ietf.org/html/RFC8725)",
        "scheme" : "bearer",
        "bearerFormat" : "JWT"
      }
    }
  }
}