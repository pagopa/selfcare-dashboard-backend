swagger.description=Self Care Dashboard API documentation
swagger.security.schema.bearer.description=A bearer token in the format of a JWS and conformed to the specifications included in [RFC8725](https://tools.ietf.org/html/RFC8725)
swagger.dashboard.model.userRole=Logged user's role
swagger.dashboard.institutions.api.description=Institution operations
swagger.dashboard.institutions.api.saveInstitutionLogo=Service to upload and store the institution's logo
swagger.dashboard.institutions.api.getInstitution=Service to get a specific institution related to logged user
swagger.dashboard.institutions.api.getInstitutions=Service to get all the institutions related to logged user
swagger.dashboard.institutions.api.getInstitutionUsers=Service to get all the users related to a specific institution
swagger.dashboard.institutions.api.getInstitutionProducts=Service to get all the products related to a specific institution
swagger.dashboard.institutions.api.getInstitutionProductUsers=Service to get all the users related to a specific pair of institution-product
swagger.dashboard.institutions.api.createInstitutionProductUser=Service to Create a user related to a specific pair of institution-product
swagger.dashboard.institutions.model.id=Institution's unique internal identifier
swagger.dashboard.institutions.model.externalId=Institution's unique external identifier (i.e.: IPA code)
#todo description to be defined
swagger.dashboard.institutions.model.origin=Institution's details origin
#todo description to be defined
swagger.dashboard.institutions.model.originId=Institution's details origin Id
swagger.dashboard.institutions.model.institutionType=Institution's type
swagger.dashboard.institutions.model.logo=Institution's logo
swagger.dashboard.institutions.model.name=Institution's name
swagger.dashboard.institutions.model.category=Institution's category
swagger.dashboard.institutions.model.fiscalCode=Fiscal code corresponding to the institution
swagger.dashboard.institutions.model.mailAddress=Institution's email address
swagger.dashboard.institutions.model.status=Institution's status
swagger.dashboard.products.model.id=Product's unique identifier
swagger.dashboard.products.model.logo=Product's logo
swagger.dashboard.products.model.title=Product's title
swagger.dashboard.products.model.status=Product's status
swagger.dashboard.products.model.children=Product's sub products list
swagger.dashboard.products.model.description=Product's description
swagger.dashboard.products.model.urlPublic=URL that redirects to the public information webpage of the product
swagger.dashboard.products.model.urlBO=URL that redirects to the back-office section, where is possible to manage the product
swagger.dashboard.products.model.activatedAt=Date the products was activated
swagger.dashboard.products.model.active=flag indicating whether the institution has a valid contract related to the product
swagger.dashboard.products.model.authorized=flag indicating whether the logged user has the authorization to manage the product
swagger.dashboard.product-role-mappings.model.partyRole=Party role
swagger.dashboard.product-role-mappings.model.selcRole=Self Care role
swagger.dashboard.product-role-mappings.model.multiroleAllowed=Indicates if an User can have more than one product role
swagger.dashboard.product-role-mappings.model.productRoles=Available product roles
swagger.dashboard.product-role.model.code=Product role internal code
swagger.dashboard.product-role.model.label=Product role label
swagger.dashboard.product-role.model.description=Product role description
swagger.dashboard.user.model.id=User's unique identifier
swagger.dashboard.user.model.relationshipId=Unique relationship identifier between User and Product
swagger.dashboard.user.model.name=User's name
swagger.dashboard.user.model.surname=User's surname
swagger.dashboard.user.model.birthDate=User's birth date
swagger.dashboard.user.model.email=User's email
swagger.dashboard.user.model.institutionEmail=User's institution email
swagger.dashboard.user.model.role=User's role
swagger.dashboard.products.model.roleInfos=User's role infos in product
swagger.dashboard.user.model.productRoles=User's roles in product
swagger.dashboard.user.model.productRole=User's role in product
swagger.dashboard.user.model.products=Authorized user products
swagger.dashboard.user.model.product=Authorized user product
swagger.dashboard.user.model.status=User's status
swagger.dashboard.user.model.certification=User's certification source
swagger.dashboard.user.model.certified=User provided with certification
swagger.dashboard.user.model.fiscalCode=User's fiscal code
swagger.dashboard.user.model.extras=User's extra details
swagger.dashboard.user.model.externalId=User's external id
swagger.dashboard.user.api.search=Retrieve the user for a given external id
swagger.dashboard.user.api.updateUserById=Update previously added user
swagger.dashboard.user.api.saveUser=Save new user
swagger.dashboard.user.api.getUserByInternalId=Retrieve the user by internal id
swagger.dashboard.user.api.deleteUserById=Delete user using internal id
swagger.dashboard.token.api.description=Token operations
swagger.dashboard.token.api.exchange=Service create an 'Identity Token' based on a Self Care session token
swagger.dashboard.token.model.realm=The domain for which the requested token is valid
swagger.dashboard.token.model.token=The Identity Token
swagger.dashboard.relationships.api.description=Relationships operations
swagger.dashboard.institutions.api.suspendUser=Suspend the relationship
swagger.dashboard.institutions.api.activateUser=Activate the relationship
swagger.dashboard.institutions.api.deleteUser=Delete the relationship
swagger.dashboard.product.api.description=Products operations
swagger.dashboard.product.api.getProductRoles=Service to get the Product roles
swagger.dashboard.user-groups.api.description=UserGroups operations
swagger.dashboard.user-group.api.createUserGroup=Service that allows the insert of a new occurrence for the UserGroup entity
swagger.dashboard.user-group.api.deleteUserGroup=Service that allows the deletion of a specific occurrence for the UserGroup entity by an Admin user
swagger.dashboard.user-group.api.activateUserGroup=Service that allows the activation of a specific occurrence for the UserGroup entity by an Admin user
swagger.dashboard.user-group.api.suspendUserGroup=Service that allows the suspension of a specific occurrence for the UserGroup entity by an Admin user
swagger.dashboard.user-group.api.updateUserGroup=Service that allows the modification of a specific occurrence for the UserGroup entity by an Admin user
swagger.dashboard.user-group.api.getUserGroup=Service to get a specific UserGroup entity
swagger.dashboard.user-group.api.deleteMember=Service to delete a member from a specific UserGroup entity
swagger.dashboard.user-group.api.addMember=Service to add a member to a specific UserGroup entity
swagger.dashboard.user-group.api.getUserGroups=Service that allows to get a list of UserGroup entities
swagger.dashboard.user-group.model.id=Users group's unique identifier
swagger.dashboard.user-group.model.institutionId=Users group's institutionId
swagger.dashboard.user-group.model.productId=Users group's productId
swagger.dashboard.user-group.model.name=Users group's name
swagger.dashboard.user-group.model.description=Users group's description
swagger.dashboard.user-group.model.status=Users group's status
swagger.dashboard.user-group.model.members=List of all the members of the group
swagger.dashboard.user-group.model.membersCount=Number all the members of the group
swagger.dashboard.user-group.model.pageable=Details for retrieving usergroups based on size and index
swagger.dashboard.user-group.model.memberId=Member's unique identifier
swagger.dashboard.user-group.model.createdAt=Date on which the group was created
swagger.dashboard.user-group.model.createdBy=User by which the group was created
swagger.dashboard.user-group.model.modifiedAt=Date on which the group was modified
swagger.dashboard.user-group.model.modifiedBy=User by which the group was modified