swagger.description=Self Care Dashboard API documentation
swagger.security.schema.bearer.description=A bearer token in the format of a JWS and conformed to the specifications included in [RFC8725](https://tools.ietf.org/html/RFC8725)
swagger.dashboard.model.userRole=Logged user's role
swagger.dashboard.institutions.api.description=Institution operations
swagger.dashboard.pnPGInstitutions.api.description=PN PG Institution operations
swagger.dashboard.institutions.api.saveInstitutionLogo=Service to upload and store the institution's logo
swagger.dashboard.institutions.api.getInstitution=Service to get a specific institution related to logged user
swagger.dashboard.institutions.api.getInstitutions=Service to get all the institutions related to logged user
swagger.dashboard.institutions.api.getInstitutionUser=Service to get the users with the given user id related to a specific institution
swagger.dashboard.institutions.api.getInstitutionUsers=Service to get all the users related to a specific institution
swagger.dashboard.institutions.api.getInstitutionProducts=Service to get all the products related to a specific institution
swagger.dashboard.institutions.api.getInstitutionProductUsers=Service to get all the users related to a specific pair of institution-product
swagger.dashboard.institutions.api.createInstitutionProductUser=Service to Create a user related to a specific pair of institution-product
swagger.dashboard.institutions.api.addUserProductRoles=Service to add a new role/product to a specific user
swagger.dashboard.institutions.api.updateInstitutionGeographicTaxonomy=Service to update the geographic taxonomy of an onboarded institution
swagger.dashboard.institutions.api.getInstitutionGeographicTaxonomy=The service retrieve the institution's geographic taxonomy
swagger.dashboard.pnPGInstitutions.api.getInstitutions=Service to get the PG institutions related to selection of logged user
swagger.dashboard.institutions.api.updateInstitutionDescription=Update institution description
swagger.dashboard.pnPGInstitutions.api.updateInstitutionDescription=Update institution description
swagger.dashboard.pnPGInstitutions.model.externalId=PG Institution's unique external identifier
swagger.dashboard.pnPGInstitutions.model.internalId=PG Institution's unique internal identifier
swagger.dashboard.pnPGInstitutions.model.address=Legal Representative's institution legal address
swagger.dashboard.pnPGInstitutions.model.zipCode=Legal Representative's institution legal address zip code
swagger.dashboard.institutions.model.description=Institution's description
swagger.dashboard.institutions.model.digitalAddress=Institution's email address
swagger.dashboard.institutions.model.id=Institution's unique internal identifier
swagger.dashboard.institutions.model.externalId=Institution's unique external identifier
swagger.dashboard.institutions.model.origin=Institution's data origin
swagger.dashboard.institutions.model.originId=Institution's identifier related to origin
swagger.dashboard.institutions.model.institutionType=Institution's type
swagger.dashboard.institutions.model.logo=Institution's logo
swagger.dashboard.institutions.model.imageUrl=Institution's depict image
swagger.dashboard.institutions.model.name=Institution's name
swagger.dashboard.institutions.model.category=Institution's category
swagger.dashboard.institutions.model.fiscalCode=Fiscal code corresponding to the institution
swagger.dashboard.institutions.model.mailAddress=Institution's email address
swagger.dashboard.institutions.model.status=Institution's status
swagger.dashboard.institutions.model.address=Institution's physical address
swagger.dashboard.institutions.model.zipCode=Institution's zipCode
swagger.dashboard.institutions.model.geographicTaxonomy=Institution's geographic taxonomy
swagger.dashboard.institutions.model.vatNumber=Institution's VAT number
swagger.dashboard.institutions.model.subunitCode=AOO o UO unique code
swagger.dashboard.institutions.model.subunitType=Institution's subunit type
swagger.dashboard.institutions.model.aooParentCode=UO's parent AOO code
swagger.dashboard.institutions.model.parentDescription=Sub unit institution parent Description
swagger.dashboard.institutions.model.recipientCode=Billing recipient code
swagger.dashboard.institutions.model.pspData=Payment Service Provider (PSP) specific data
swagger.dashboard.institutions.model.pspData.businessRegisterNumber=PSP's Business Register number
swagger.dashboard.institutions.model.pspData.legalRegisterName=PSP's legal register name
swagger.dashboard.institutions.model.pspData.legalRegisterNumber=PSP's legal register number
swagger.dashboard.institutions.model.pspData.abiCode=PSP's ABI code
swagger.dashboard.institutions.model.pspData.vatNumberGroup=PSP's Vat Number group
swagger.dashboard.institutions.model.dpoData=Data Protection Officer (DPO) specific data
swagger.dashboard.institutions.model.dpoData.address=DPO's address
swagger.dashboard.institutions.model.dpoData.pec=DPO's PEC
swagger.dashboard.institutions.model.dpoData.email=DPO's email
swagger.dashboard.institutions.model.supportContact='Institution's assistance contacts'
swagger.dashboard.institutions.model.supportContact.supportEmail=Institution's support email contact
swagger.dashboard.institutions.model.supportContact.supportPhone=Institution's support phone contact
swagger.dashboard.geographicTaxonomy.model.code=Institution's geographic taxonomy ISTAT code
swagger.dashboard.geographicTaxonomy.model.desc=Institution's geographic taxonomy extended name
#TODO redundant description remove and fix api descriptions in all the models that uses this description
swagger.dashboard.geographicTaxonomyList.model.geographicTaxonomyDtoList=List of institution's geographic taxonomies  
swagger.dashboard.products.model.id=Product's unique identifier
swagger.dashboard.products.model.institutionType=Institution Type
swagger.dashboard.products.model.logo=Product's logo
swagger.dashboard.products.model.logoBgColor=Product logo's background color
swagger.dashboard.products.model.imageUrl=Product's depict image
swagger.dashboard.products.model.title=Product's title
swagger.dashboard.products.model.productOnBoardingStatus=Product's onBoarding status
swagger.dashboard.products.model.status=Product's status
swagger.dashboard.products.model.delegable=If a product is delegable to a technical partner 
swagger.dashboard.products.model.children=Product's sub products list
swagger.dashboard.products.model.description=Product's description
swagger.dashboard.products.model.urlPublic=URL that redirects to the public information webpage of the product
swagger.dashboard.products.model.urlBO=URL that redirects to the back-office section, where is possible to manage the product
swagger.dashboard.products.model.activatedAt=Date the products was activated
swagger.dashboard.products.model.active=flag indicating whether the institution has a valid contract related to the product
swagger.dashboard.products.model.authorized=flag indicating whether the logged user has the authorization to manage the product
swagger.dashboard.products.model.backOfficeEnvironmentConfigurations=Environment-specific configurations for back-office redirection with Token Exchange
swagger.dashboard.product-role-mappings.model.partyRole=Party role
swagger.dashboard.product-role-mappings.model.selcRole=Self Care role
swagger.dashboard.product-role-mappings.model.multiroleAllowed=Indicates if an User can have more than one product role
swagger.dashboard.product-role-mappings.model.productRoles=Available product roles
swagger.dashboard.product-role.model.code=Product role internal code
swagger.dashboard.product-role.model.label=Product role label
swagger.dashboard.product-role.model.description=Product role description
swagger.dashboard.product-backoffice-configurations.model.environment=Back Office environment
swagger.dashboard.user.model.id=User's unique identifier
swagger.dashboard.user.model.relationshipId=Unique relationship identifier between User and Product
swagger.dashboard.user.model.name=User's name
swagger.dashboard.user.model.surname=User's surname
swagger.dashboard.user.model.birthDate=User's birth date
swagger.dashboard.user.model.email=User's personal email
swagger.dashboard.user.model.institutionalEmail=User's institutional email
swagger.dashboard.user.model.role=User's role
swagger.dashboard.products.model.roleInfos=User's role infos in product
swagger.dashboard.user.model.productRoles=User's roles in product
swagger.dashboard.user.model.productRole=User's role in product
swagger.dashboard.user.model.products=Authorized user products
swagger.dashboard.user.model.product=Authorized user product
swagger.dashboard.user.model.status=User's status
swagger.dashboard.user.model.fiscalCode=User's fiscal code
swagger.dashboard.user.model.extras=User's extra details
swagger.dashboard.user.api.search=Retrieve the user for a given fiscal code
swagger.dashboard.user.api.updateUserById=Update previously added user
swagger.dashboard.user.api.saveUser=Save new user
swagger.dashboard.user.api.getUserByInternalId=Retrieve the user by internal id
swagger.dashboard.user.api.deleteUserById=Delete user using internal id
swagger.dashboard.token.api.description=Token operations
swagger.dashboard.token.api.exchange=Service create an 'Identity Token' based on a Self Care session token
swagger.dashboard.token.model.realm=The domain for which the requested token is valid
swagger.dashboard.token.model.token=The Identity Token
swagger.dashboard.relationships.api.description=Relationships operations
swagger.dashboard.institutions.api.suspendUser=Suspend the relationship
swagger.dashboard.institutions.api.activateUser=Activate the relationship
swagger.dashboard.institutions.api.deleteUser=Delete the relationship
swagger.dashboard.product.api.description=Products operations
swagger.dashboard.product.api.getProductRoles=Service to get the Product roles
swagger.dashboard.product.api.getProductBrokers=Service to get list of partners
swagger.dashboard.product.api.retrieveProductBackoffice=Service to trigger token exchange and redirect to product's back office URL
swagger.dashboard.user-groups.api.description=UserGroups operations
swagger.dashboard.user-group.api.createUserGroup=Service that allows the insert of a new occurrence for the UserGroup entity
swagger.dashboard.user-group.api.deleteUserGroup=Service that allows the deletion of a specific occurrence for the UserGroup entity by an Admin user
swagger.dashboard.user-group.api.activateUserGroup=Service that allows the activation of a specific occurrence for the UserGroup entity by an Admin user
swagger.dashboard.user-group.api.suspendUserGroup=Service that allows the suspension of a specific occurrence for the UserGroup entity by an Admin user
swagger.dashboard.user-group.api.updateUserGroup=Service that allows the modification of a specific occurrence for the UserGroup entity by an Admin user
swagger.dashboard.user-group.api.getUserGroup=Service to get a specific UserGroup entity
swagger.dashboard.user-group.api.deleteMember=Service to delete a member from a specific UserGroup entity
swagger.dashboard.user-group.api.addMember=Service to add a member to a specific UserGroup entity
swagger.dashboard.user-group.api.getUserGroups=Service that allows to get a list of UserGroup entities
swagger.dashboard.user-group.model.id=Users group's unique identifier
swagger.dashboard.user-group.model.institutionId=Users group's institutionId
swagger.dashboard.user-group.model.productId=Users group's productId
swagger.dashboard.user-group.model.name=Users group's name
swagger.dashboard.user-group.model.description=Users group's description
swagger.dashboard.user-group.model.status=Users group's status
swagger.dashboard.user-group.model.members=List of all the members of the group
swagger.dashboard.user-group.model.membersCount=Number all the members of the group
swagger.dashboard.user-group.model.pageable=Details for retrieving usergroups based on size and index
swagger.dashboard.user-group.model.memberId=Member's unique identifier
swagger.dashboard.user-group.model.createdAt=Date on which the group was created
swagger.dashboard.user-group.model.createdBy=User by which the group was created
swagger.dashboard.user-group.model.modifiedAt=Date on which the group was modified
swagger.dashboard.user-group.model.modifiedBy=User by which the group was modified
swagger.model.certifiedField.certified=Indicates whether the value comes from a certified information source
swagger.model.certifiedField.value=Field value
swagger.dashboard.onboarding.api.description=Onboarding operations
swagger.dashboard.onboarding-requests.api.retrieveOnboardingRequest=Service to retrieve a specific onboarding request
swagger.dashboard.onboarding-requests.api.approveOnboardingRequest=Service to approve a specific onboarding request
swagger.dashboard.onboarding-requests.api.rejectOnboardingRequest=Service to reject a specific onboarding request
swagger.dashboard.onboarding-requests.model.tokenId=Onboarding request's unique identifier
swagger.dashboard.onboarding-request.model.status=Onboarding request's status
swagger.dashboard.onboarding-request.model.institutionInfo=Institution specific data
swagger.dashboard.onboarding-request.model.manager=Manager specific data
swagger.dashboard.onboarding-request.model.admins=Administrators specific data
swagger.dashboard.brokers.model.code=Partner's code
swagger.dashboard.brokers.model.description=Partner's description
swagger.dashboard.brokers.model.enabled=Partner's enabling
swagger.dashboard.delegation.api.createDelegation=Service to create association between institution and technical partner
swagger.dashboard.delegation.model.id=Delegation's unique identifier
swagger.dashboard.delegation.model.from=Institution's identifier
swagger.dashboard.delegation.model.to=Technical partner's identifier
swagger.dashboard.delegation.model.productId=Product's identifier
swagger.dashboard.delegation.model.type=Delegation type
swagger.dashboard.delegation.model.institutionFromName=Institution's name
swagger.dashboard.delegation.model.institutionToName=Partner's name